<Application x:Class="Twidibot.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Twidibot"
             xmlns:materialDesignMahApps="http://materialdesigninxaml.net/winfx/xaml/themes" 
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:mah="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             StartupUri="BackWin.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml"/>
                <!--<ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml"/>-->
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Themes/Dark.Orange.xaml"/>

                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesign2.Defaults.xaml"/>
                <!--<ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.DeepPurple.xaml" />-->
                <!--<ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Lime.xaml" />-->

                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.MahApps;component/Themes/MaterialDesignTheme.MahApps.Fonts.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.MahApps;component/Themes/MaterialDesignTheme.MahApps.Defaults.xaml"/>
                <!--<ResourceDictionary Source="/Resources/Icons.xaml" />-->
                <!--<ResourceDictionary Source="Themes/Colors.xaml"/>-->
            </ResourceDictionary.MergedDictionaries>
            <SolidColorBrush x:Key="ToggleSwitchC" Color="{DynamicResource ColorCon_Purple}"/>
            <Style TargetType="mah:ToggleSwitch" x:Key="TBC" BasedOn="{StaticResource MahApps.Styles.ToggleSwitch}">
                <Setter Property="Background" Value="#FF8601F3"/>
                <Setter Property="BorderBrush" Value="#FDE100"/>
            </Style>
            <SolidColorBrush x:Key="TBC2" Color="{DynamicResource ColorCon_Purple}"/>
            <Color x:Key="ColorCon_Orange">#E5801C</Color>
            <Color x:Key="ColorCon_Purple">#FF8601F3</Color>
            <Color x:Key="ColorCon_White">#DDDDDA</Color>
            <Color x:Key="ColorCon_Yellow">#FDE100</Color>
            <Color x:Key="ColorCon_Red">#DE5A4A</Color>
            <Color x:Key="ColorCon_Green">#33AA66</Color>

            <Style TargetType="Button" x:Key="RoundButton" BasedOn="{StaticResource MaterialDesignFloatingActionMiniDarkButton}">
                <Style.Resources>
                    <Style TargetType="Border">
                        <Setter Property="CornerRadius" Value="50"/>
                    </Style>
                </Style.Resources>
            </Style>

            <!--<Style TargetType="CheckBox">
             <Setter Property="Template">
                 <Setter.Value>
                     <ControlTemplate TargetType="CheckBox">
                         <StackPanel Orientation="Horizontal">
                             <Grid >
                                 <Border Width="22" Height="10" Background="#DDDDDA" CornerRadius="5" Margin="5,0"></Border>
                                 <Border x:Name="button" Height="15" Width="15" CornerRadius="12.5" HorizontalAlignment="Left"></Border>
                             </Grid>
                             <ContentPresenter x:Name="content" Margin="2,0,0,0" Content="{TemplateBinding Content}" VerticalAlignment="Center"/>
                         </StackPanel>
                         <ControlTemplate.Resources>
                             <Storyboard x:Key="right">
                                 <ThicknessAnimation Storyboard.TargetProperty="Margin" Storyboard.TargetName="button" Duration="0:0:0.4" From="0,0,0,0" To="28,0,0,0" >
                                     <ThicknessAnimation.EasingFunction>
                                         <CircleEase EasingMode="EaseOut"/>
                                     </ThicknessAnimation.EasingFunction>
                                 </ThicknessAnimation>
                             </Storyboard>
                             <Storyboard x:Key="left">
                                 <ThicknessAnimation Storyboard.TargetProperty="Margin" Storyboard.TargetName="button" Duration="0:0:0.4" From="28,0,0,0" To="0,0,0,0" >
                                     <ThicknessAnimation.EasingFunction>
                                         <CircleEase EasingMode="EaseOut"/>
                                     </ThicknessAnimation.EasingFunction>
                                 </ThicknessAnimation>
                             </Storyboard>
                         </ControlTemplate.Resources>
                         <ControlTemplate.Triggers>
                             <Trigger Property="IsChecked" Value="false">
                                 <Trigger.ExitActions>
                                     <RemoveStoryboard BeginStoryboardName="leftt"></RemoveStoryboard>
                                     <BeginStoryboard Storyboard="{StaticResource right}" x:Name="rightt" ></BeginStoryboard>
                                 </Trigger.ExitActions>
                                 <Setter TargetName="button" Property="Background" Value="#DDDDDA"></Setter>
                             </Trigger>
                             <Trigger Property="IsChecked" Value="true">
                                 <Trigger.ExitActions>
                                     <RemoveStoryboard BeginStoryboardName="rightt"></RemoveStoryboard>
                                     <BeginStoryboard Storyboard="{StaticResource left}" x:Name="leftt" ></BeginStoryboard>
                                 </Trigger.ExitActions>
                                 <Setter TargetName="button" Property="Background" Value="#E5801C"></Setter>
                             </Trigger>
                         </ControlTemplate.Triggers>
                     </ControlTemplate>
                 </Setter.Value>
             </Setter>
         </Style>-->

            <!--<Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
             <Style.BasedOn>
                 <Style TargetType="{x:Type ButtonBase}">
                     <Setter Property="FocusVisualStyle">
                         <Setter.Value>
                             <Style>
                                 <Setter Property="Control.Template">
                                     <Setter.Value>
                                         <ControlTemplate>
                                             <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                         </ControlTemplate>
                                     </Setter.Value>
                                 </Setter>
                             </Style>
                         </Setter.Value>
                     </Setter>
                     <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}"/>
                     <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}"/>
                     <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
                     <Setter Property="Cursor" Value="Hand"/>
                     <Setter Property="FontWeight" Value="Medium"/>
                     <Setter Property="FontSize" Value="14"/>
                     <Setter Property="BorderThickness" Value="1"/>
                     <Setter Property="HorizontalContentAlignment" Value="Center"/>
                     <Setter Property="VerticalContentAlignment" Value="Center"/>
                     <Setter Property="Padding" Value="16,4"/>
                     <Setter Property="Height" Value="32"/>
                     <Setter Property="materialDesignMahApps:ShadowAssist.ShadowDepth" Value="Depth1"/>
                     <Setter Property="materialDesignMahApps:ButtonAssist.CornerRadius" Value="2"/>
                     <Setter Property="materialDesignMahApps:RippleAssist.Feedback" Value="White"/>
                     <Setter Property="materialDesignMahApps:ButtonProgressAssist.IndicatorForeground" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
                     <Setter Property="materialDesignMahApps:ButtonProgressAssist.IndicatorBackground" Value="{DynamicResource PrimaryHueMidBrush}"/>
                     <Setter Property="materialDesignMahApps:ButtonProgressAssist.IsIndicatorVisible" Value="False"/>
                     <Setter Property="materialDesignMahApps:ButtonProgressAssist.Opacity" Value="0.4"/>
                     <Setter Property="Template">
                         <Setter.Value>
                             <ControlTemplate TargetType="{x:Type ButtonBase}">
                                 <Grid>
                                     <AdornerDecorator CacheMode="{Binding (materialDesignMahApps:ShadowAssist.CacheMode), RelativeSource={RelativeSource Self}}">
                                         <Grid>
                                             <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="{Binding (materialDesignMahApps:ButtonAssist.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                                                 <Border.Effect>
                                                     <Binding Path="(materialDesignMahApps:ShadowAssist.ShadowDepth)" RelativeSource="{RelativeSource TemplatedParent}">
                                                         <Binding.Converter>
                                                             <materialDesignMahApps:ShadowConverter/>
                                                         </Binding.Converter>
                                                     </Binding>
                                                 </Border.Effect>
                                             </Border>
                                             <ProgressBar x:Name="ProgressBar" BorderBrush="{Binding (materialDesignMahApps:ButtonProgressAssist.IndicatorBackground), RelativeSource={RelativeSource TemplatedParent}}" Background="{Binding (materialDesignMahApps:ButtonProgressAssist.IndicatorBackground), RelativeSource={RelativeSource TemplatedParent}}" Foreground="{Binding (materialDesignMahApps:ButtonProgressAssist.IndicatorForeground), RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="Left" Height="{TemplateBinding Height}" IsIndeterminate="{Binding (materialDesignMahApps:ButtonProgressAssist.IsIndeterminate), RelativeSource={RelativeSource TemplatedParent}}" Maximum="{Binding (materialDesignMahApps:ButtonProgressAssist.Maximum), RelativeSource={RelativeSource TemplatedParent}}" Minimum="{Binding (materialDesignMahApps:ButtonProgressAssist.Minimum), RelativeSource={RelativeSource TemplatedParent}}" Opacity="{Binding (materialDesignMahApps:ButtonProgressAssist.Opacity), RelativeSource={RelativeSource TemplatedParent}}" Style="{DynamicResource MaterialDesignLinearProgressBar}" Value="{Binding (materialDesignMahApps:ButtonProgressAssist.Value), RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" Width="{Binding ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ButtonBase}}}">
                                                 <ProgressBar.Clip>
                                                     <MultiBinding UpdateSourceTrigger="Default">
                                                         <Binding ElementName="border" Path="ActualWidth"/>
                                                         <Binding ElementName="border" Path="ActualHeight"/>
                                                         <Binding ElementName="border" Path="CornerRadius"/>
                                                         <Binding ElementName="border" Path="BorderThickness"/>
                                                     </MultiBinding>
                                                 </ProgressBar.Clip>
                                                 <ProgressBar.Visibility>
                                                     <Binding Path="(materialDesignMahApps:ButtonProgressAssist.IsIndicatorVisible)" RelativeSource="{RelativeSource TemplatedParent}">
                                                         <Binding.Converter>
                                                             <BooleanToVisibilityConverter/>
                                                         </Binding.Converter>
                                                     </Binding>
                                                 </ProgressBar.Visibility>
                                             </ProgressBar>
                                         </Grid>
                                     </AdornerDecorator>
                                     <materialDesignMahApps:Ripple ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                                         <materialDesignMahApps:Ripple.Clip>
                                             <MultiBinding UpdateSourceTrigger="Default">
                                                 <Binding ElementName="border" Path="ActualWidth"/>
                                                 <Binding ElementName="border" Path="ActualHeight"/>
                                                 <Binding ElementName="border" Path="CornerRadius"/>
                                                 <Binding ElementName="border" Path="BorderThickness"/>
                                             </MultiBinding>
                                         </materialDesignMahApps:Ripple.Clip>
                                     </materialDesignMahApps:Ripple>
                                 </Grid>
                                 <ControlTemplate.Triggers>
                                     <Trigger Property="IsMouseOver" Value="True">
                                         <Setter Property="materialDesignMahApps:ShadowAssist.Darken" TargetName="border" Value="True"/>
                                     </Trigger>
                                     <Trigger Property="IsKeyboardFocused" Value="True">
                                         <Setter Property="materialDesignMahApps:ShadowAssist.Darken" TargetName="border" Value="True"/>
                                     </Trigger>
                                     <Trigger Property="IsEnabled" Value="False">
                                         <Setter Property="Opacity" Value="0.38"/>
                                     </Trigger>
                                 </ControlTemplate.Triggers>
                             </ControlTemplate>
                         </Setter.Value>
                     </Setter>
                 </Style>
             </Style.BasedOn>
             <Style.Resources>
                 <Style TargetType="{x:Type Border}">
                     <Setter Property="CornerRadius" Value="50"/>
                 </Style>
             </Style.Resources>
         </Style>-->

        </ResourceDictionary>
    </Application.Resources>
</Application>
